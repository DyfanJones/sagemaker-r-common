% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/debugger.R
\name{RuleBase}
\alias{RuleBase}
\title{The SageMaker Debugger rule base class that cannot be instantiated directly.}
\description{
Debugger rule classes inheriting this RuleBase class are
             :class:`~sagemaker.debugger.Rule` and :class:`~sagemaker.debugger.ProfilerRule`.
             Do not directly use the rule base class to instantiate a SageMaker Debugger rule.
             Use the :class:`~sagemaker.debugger.Rule` classmethods for debugging
             and the :class:`~sagemaker.debugger.ProfilerRule` classmethods for profiling.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{name}}{(str): The name of the rule.}

\item{\code{image_uri}}{(str): The image URI to use the rule.}

\item{\code{instance_type}}{(str): Type of EC2 instance to use. For example, 'ml.c4.xlarge'.}

\item{\code{container_local_output_path}}{(str): The local path to store the Rule output.}

\item{\code{s3_output_path}}{(str): The location in S3 to store the output.}

\item{\code{volume_size_in_gb}}{(int): Size in GB of the EBS volume to use for storing data.}

\item{\code{rule_parameters}}{(dict): A dictionary of parameters for the rule.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{RuleBase$new()}}
\item \href{#method-format}{\code{RuleBase$format()}}
\item \href{#method-clone}{\code{RuleBase$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialize RuleBase class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RuleBase$new(
  name = NULL,
  image_uri = NULL,
  instance_type = NULL,
  container_local_output_path = NULL,
  s3_output_path = NULL,
  volume_size_in_gb = NULL,
  rule_parameters = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{(str): The name of the rule.}

\item{\code{image_uri}}{(str): The image URI to use the rule.}

\item{\code{instance_type}}{(str): Type of EC2 instance to use. For example, 'ml.c4.xlarge'.}

\item{\code{container_local_output_path}}{(str): The local path to store the Rule output.}

\item{\code{s3_output_path}}{(str): The location in S3 to store the output.}

\item{\code{volume_size_in_gb}}{(int): Size in GB of the EBS volume to use for storing data.}

\item{\code{rule_parameters}}{(dict): A dictionary of parameters for the rule.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-format"></a>}}
\if{latex}{\out{\hypertarget{method-format}{}}}
\subsection{Method \code{format()}}{
format class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RuleBase$format()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RuleBase$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
