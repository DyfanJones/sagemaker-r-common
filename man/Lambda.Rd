% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lambda_helper.R
\name{Lambda}
\alias{Lambda}
\title{Lambda class}
\description{
Contains lambda boto3 wrappers to Create, Update, Delete and Invoke Lambda functions.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Lambda-new}{\code{Lambda$new()}}
\item \href{#method-Lambda-create}{\code{Lambda$create()}}
\item \href{#method-Lambda-update}{\code{Lambda$update()}}
\item \href{#method-Lambda-invoke}{\code{Lambda$invoke()}}
\item \href{#method-Lambda-delete}{\code{Lambda$delete()}}
\item \href{#method-Lambda-format}{\code{Lambda$format()}}
\item \href{#method-Lambda-clone}{\code{Lambda$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Lambda-new"></a>}}
\if{latex}{\out{\hypertarget{method-Lambda-new}{}}}
\subsection{Method \code{new()}}{
Constructs a Lambda instance.
             This instance represents a Lambda function and provides methods for updating,
             deleting and invoking the function.
             This class can be used either for creating a new Lambda function or using an existing one.
             When using an existing Lambda function, only the function_arn argument is required.
             When creating a new one the function_name, execution_role_arn and handler arguments
             are required, as well as either script or zipped_code_dir.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Lambda$new(
  function_arn = NULL,
  function_name = NULL,
  execution_role_arn = NULL,
  zipped_code_dir = NULL,
  s3_bucket = NULL,
  script = NULL,
  handler = NULL,
  session = NULL,
  timeout = 120,
  memory_size = 128,
  runtime = "python3.8"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{function_arn}}{(str): The arn of the Lambda function.}

\item{\code{function_name}}{(str): The name of the Lambda function.
Function name must be provided to create a Lambda function.}

\item{\code{execution_role_arn}}{(str): The role to be attached to Lambda function.}

\item{\code{zipped_code_dir}}{(str): The path of the zipped code package of the Lambda function.}

\item{\code{s3_bucket}}{(str): The bucket where zipped code is uploaded.
If not provided, default session bucket is used to upload zipped_code_dir.}

\item{\code{script}}{(str): The path of Lambda function script for direct zipped upload}

\item{\code{handler}}{(str): The Lambda handler. The format for handler should be
file_name.function_name. For ex: if the name of the Lambda script is
hello_world.py and Lambda function definition in that script is}

\item{\code{session}}{(sagemaker.session.Session): Session object which manages interactions
with Amazon SageMaker APIs and any other AWS services needed.
If not specified, new session is created.}

\item{\code{timeout}}{(int): Timeout of the Lambda function in seconds. Default is 120 seconds.}

\item{\code{memory_size}}{(int): Memory of the Lambda function in megabytes. Default is 128 MB.}

\item{\code{runtime}}{(str): Runtime of the Lambda function. Default is set to python3.8.}

\item{\code{lambda_handler(event, }}{context), the handler should be hello_world.lambda_handler}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Lambda-create"></a>}}
\if{latex}{\out{\hypertarget{method-Lambda-create}{}}}
\subsection{Method \code{create()}}{
Method to create a lambda function.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Lambda$create()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
boto3 response from Lambda's create_function method.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Lambda-update"></a>}}
\if{latex}{\out{\hypertarget{method-Lambda-update}{}}}
\subsection{Method \code{update()}}{
Method to update a lambda function.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Lambda$update()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
: paws response from Lambda's update_function method.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Lambda-invoke"></a>}}
\if{latex}{\out{\hypertarget{method-Lambda-invoke}{}}}
\subsection{Method \code{invoke()}}{
Method to invoke a lambda function.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Lambda$invoke()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
paws response from Lambda's invoke method.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Lambda-delete"></a>}}
\if{latex}{\out{\hypertarget{method-Lambda-delete}{}}}
\subsection{Method \code{delete()}}{
Method to delete a lambda function.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Lambda$delete()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
paws response from Lambda's delete_function method.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Lambda-format"></a>}}
\if{latex}{\out{\hypertarget{method-Lambda-format}{}}}
\subsection{Method \code{format()}}{
foramt class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Lambda$format()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Lambda-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Lambda-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Lambda$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
