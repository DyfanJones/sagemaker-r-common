% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/processing.R
\name{ProcessingJob}
\alias{ProcessingJob}
\title{ProccesingJob Class}
\description{
Provides functionality to start, describe, and stop processing jobs.
}
\seealso{
Other Processor: 
\code{\link{ProcessingInput}},
\code{\link{ProcessingOutput}},
\code{\link{Processor}},
\code{\link{ScriptProcessor}}
}
\concept{Processor}
\section{Super class}{
\code{\link[R6sagemaker.common:.Job]{R6sagemaker.common::.Job}} -> \code{ProcessingJob}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{inputs}}{A list of :class:`~sagemaker.processing.ProcessingInput` objects.}

\item{\code{outputs}}{A list of :class:`~sagemaker.processing.ProcessingOutput` objects.}

\item{\code{output_kms_key}}{The output KMS key associated with the job}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{ProcessingJob$new()}}
\item \href{#method-start_new}{\code{ProcessingJob$start_new()}}
\item \href{#method-from_processing_name}{\code{ProcessingJob$from_processing_name()}}
\item \href{#method-from_processing_arn}{\code{ProcessingJob$from_processing_arn()}}
\item \href{#method-wait}{\code{ProcessingJob$wait()}}
\item \href{#method-describe}{\code{ProcessingJob$describe()}}
\item \href{#method-stop}{\code{ProcessingJob$stop()}}
\item \href{#method-prepare_app_specification}{\code{ProcessingJob$prepare_app_specification()}}
\item \href{#method-prepare_output_config}{\code{ProcessingJob$prepare_output_config()}}
\item \href{#method-prepare_processing_resources}{\code{ProcessingJob$prepare_processing_resources()}}
\item \href{#method-prepare_stopping_condition}{\code{ProcessingJob$prepare_stopping_condition()}}
\item \href{#method-clone}{\code{ProcessingJob$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="R6sagemaker.common" data-topic=".Job" data-id="format">}\href{../../R6sagemaker.common/html/.Job.html#method-format}{\code{R6sagemaker.common::.Job$format()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initializes a Processing job.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProcessingJob$new(
  sagemaker_session,
  job_name,
  inputs,
  outputs,
  output_kms_key = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sagemaker_session}}{(:class:`~sagemaker.session.Session`):
Session object which manages interactions with Amazon SageMaker and
any other AWS services needed. If not specified, the processor creates
one using the default AWS configuration chain.}

\item{\code{job_name}}{(str): Name of the Processing job.}

\item{\code{inputs}}{(list[:class:`~sagemaker.processing.ProcessingInput`]): A list of
:class:`~sagemaker.processing.ProcessingInput` objects.}

\item{\code{outputs}}{(list[:class:`~sagemaker.processing.ProcessingOutput`]): A list of
:class:`~sagemaker.processing.ProcessingOutput` objects.}

\item{\code{output_kms_key}}{(str): The output KMS key associated with the job (default: None).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-start_new"></a>}}
\if{latex}{\out{\hypertarget{method-start_new}{}}}
\subsection{Method \code{start_new()}}{
Starts a new processing job using the provided inputs and outputs.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProcessingJob$start_new(processor, inputs, outputs, experiment_config)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{processor}}{(:class:`~sagemaker.processing.Processor`): The ``Processor`` instance
that started the job.}

\item{\code{inputs}}{(list[:class:`~sagemaker.processing.ProcessingInput`]): A list of
:class:`~sagemaker.processing.ProcessingInput` objects.}

\item{\code{outputs}}{(list[:class:`~sagemaker.processing.ProcessingOutput`]): A list of
:class:`~sagemaker.processing.ProcessingOutput` objects.}

\item{\code{experiment_config}}{(dict[str, str]): Experiment management configuration.
Dictionary contains three optional keys:
'ExperimentName', 'TrialName', and 'TrialComponentDisplayName'.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
:class:`~sagemaker.processing.ProcessingJob`: The instance of ``ProcessingJob`` created
             using the ``Processor``.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-from_processing_name"></a>}}
\if{latex}{\out{\hypertarget{method-from_processing_name}{}}}
\subsection{Method \code{from_processing_name()}}{
Initializes a ``ProcessingJob`` from a processing job name.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProcessingJob$from_processing_name(sagemaker_session, processing_job_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sagemaker_session}}{(:class:`~sagemaker.session.Session`):
Session object which manages interactions with Amazon SageMaker and
any other AWS services needed. If not specified, the processor creates
one using the default AWS configuration chain.}

\item{\code{processing_job_name}}{(str): Name of the processing job.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
:class:`~sagemaker.processing.ProcessingJob`: The instance of ``ProcessingJob`` created
             from the job name.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-from_processing_arn"></a>}}
\if{latex}{\out{\hypertarget{method-from_processing_arn}{}}}
\subsection{Method \code{from_processing_arn()}}{
Initializes a ``ProcessingJob`` from a Processing ARN.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProcessingJob$from_processing_arn(sagemaker_session, processing_job_arn)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sagemaker_session}}{(:class:`~sagemaker.session.Session`):
Session object which manages interactions with Amazon SageMaker and
any other AWS services needed. If not specified, the processor creates
one using the default AWS configuration chain.}

\item{\code{processing_job_arn}}{(str): ARN of the processing job.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
:class:`~sagemaker.processing.ProcessingJob`: The instance of ``ProcessingJob`` created
             from the processing job's ARN.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-wait"></a>}}
\if{latex}{\out{\hypertarget{method-wait}{}}}
\subsection{Method \code{wait()}}{
Waits for the processing job to complete.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProcessingJob$wait(logs = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{logs}}{(bool): Whether to show the logs produced by the job (default: True).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-describe"></a>}}
\if{latex}{\out{\hypertarget{method-describe}{}}}
\subsection{Method \code{describe()}}{
Prints out a response from the DescribeProcessingJob API call.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProcessingJob$describe()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-stop"></a>}}
\if{latex}{\out{\hypertarget{method-stop}{}}}
\subsection{Method \code{stop()}}{
the processing job.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProcessingJob$stop()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-prepare_app_specification"></a>}}
\if{latex}{\out{\hypertarget{method-prepare_app_specification}{}}}
\subsection{Method \code{prepare_app_specification()}}{
Prepares a dict that represents a ProcessingJob's AppSpecification.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProcessingJob$prepare_app_specification(
  container_arguments,
  container_entrypoint,
  image_uri
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{container_arguments}}{(list[str]): The arguments for a container
used to run a processing job.}

\item{\code{container_entrypoint}}{(list[str]): The entrypoint for a container
used to run a processing job.}

\item{\code{image_uri}}{(str): The container image to be run by the processing job.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
dict: Represents AppSpecification which configures the
             processing job to run a specified Docker container image.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-prepare_output_config"></a>}}
\if{latex}{\out{\hypertarget{method-prepare_output_config}{}}}
\subsection{Method \code{prepare_output_config()}}{
Prepares a dict that represents a ProcessingOutputConfig.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProcessingJob$prepare_output_config(kms_key_id, outputs)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{kms_key_id}}{(str): The AWS Key Management Service (AWS KMS) key that
Amazon SageMaker uses to encrypt the processing job output.
KmsKeyId can be an ID of a KMS key, ARN of a KMS key, alias of a KMS key,
or alias of a KMS key. The KmsKeyId is applied to all outputs.}

\item{\code{outputs}}{(list[dict]): Output configuration information for a processing job.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
dict: Represents output configuration for the processing job.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-prepare_processing_resources"></a>}}
\if{latex}{\out{\hypertarget{method-prepare_processing_resources}{}}}
\subsection{Method \code{prepare_processing_resources()}}{
Prepares a dict that represents the ProcessingResources.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProcessingJob$prepare_processing_resources(
  instance_count,
  instance_type,
  volume_kms_key_id,
  volume_size_in_gb
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{instance_count}}{(int): The number of ML compute instances
to use in the processing job. For distributed processing jobs,
specify a value greater than 1. The default value is 1.}

\item{\code{instance_type}}{(str): The ML compute instance type for the processing job.}

\item{\code{volume_kms_key_id}}{(str): The AWS Key Management Service (AWS KMS) key
that Amazon SageMaker uses to encrypt data on the storage
volume attached to the ML compute instance(s) that run the processing job.}

\item{\code{volume_size_in_gb}}{(int): The size of the ML storage volume in gigabytes
that you want to provision. You must specify sufficient
ML storage for your scenario.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
dict: Represents ProcessingResources which identifies the resources,
             ML compute instances, and ML storage volumes to deploy
             for a processing job.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-prepare_stopping_condition"></a>}}
\if{latex}{\out{\hypertarget{method-prepare_stopping_condition}{}}}
\subsection{Method \code{prepare_stopping_condition()}}{
Prepares a dict that represents the job's StoppingCondition.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProcessingJob$prepare_stopping_condition(max_runtime_in_seconds)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{max_runtime_in_seconds}}{(int): Specifies the maximum runtime in seconds.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
list
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProcessingJob$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
