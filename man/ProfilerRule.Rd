% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/debugger.R
\name{ProfilerRule}
\alias{ProfilerRule}
\title{The SageMaker Debugger ProfilerRule class configures *profiling* rules.}
\description{
SageMaker Debugger profiling rules automatically analyze
             hardware system resource utilization and framework metrics of a
             training job to identify performance bottlenecks.
             SageMaker Debugger comes pre-packaged with built-in *profiling* rules.
             For example, the profiling rules can detect if GPUs are underutilized due to CPU bottlenecks or
             IO bottlenecks.
             For a full list of built-in rules for debugging, see
             `List of Debugger Built-in Rules`
             \url{https://docs.aws.amazon.com/sagemaker/latest/dg/debugger-built-in-rules.html}.
             You can also write your own profiling rules using the Amazon SageMaker
             Debugger APIs.
}
\section{Super class}{
\code{\link[sagemaker.common:RuleBase]{sagemaker.common::RuleBase}} -> \code{ProfilerRule}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-sagemaker}{\code{ProfilerRule$sagemaker()}}
\item \href{#method-custom}{\code{ProfilerRule$custom()}}
\item \href{#method-to_profiler_rule_config_list}{\code{ProfilerRule$to_profiler_rule_config_list()}}
\item \href{#method-clone}{\code{ProfilerRule$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="RuleBase" data-id="format">}\href{../../sagemaker.common/html/RuleBase.html#method-format}{\code{sagemaker.common::RuleBase$format()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="RuleBase" data-id="initialize">}\href{../../sagemaker.common/html/RuleBase.html#method-initialize}{\code{sagemaker.common::RuleBase$initialize()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-sagemaker"></a>}}
\if{latex}{\out{\hypertarget{method-sagemaker}{}}}
\subsection{Method \code{sagemaker()}}{
Initialize a ``ProfilerRule`` object for a *built-in* profiling rule.
             The rule analyzes system and framework metrics of a given
             training job to identify performance bottlenecks.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProfilerRule$sagemaker(
  base_config,
  name = NULL,
  container_local_output_path = NULL,
  s3_output_path = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{base_config}}{(\code{sagemaker.debugger::ProfilerReport}): The base rule configuration object
returned from the \code{sagemaker.debugger} method.
For example, \code{sagemaker.debugger::ProfilerReport$new()}.
For a full list of built-in rules for debugging, see
`List of Debugger Built-in Rules`
\url{https://docs.aws.amazon.com/sagemaker/latest/dg/debugger-built-in-rules.html}.}

\item{\code{name}}{(str): The name of the profiler rule. If one is not provided,
the name of the base_config will be used.}

\item{\code{container_local_output_path}}{(str): The path in the container.}

\item{\code{s3_output_path}}{(str): The location in Amazon S3 to store the profiling output data.
The default Debugger output path for profiling data is created under the
default output path of the :class:`~sagemaker.estimator.Estimator` class.
For example,
s3://sagemaker-<region>-<12digit_account_id>/<training-job-name>/profiler-output/.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
:class:`~sagemaker.debugger.ProfilerRule`:
             The instance of the built-in ProfilerRule.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-custom"></a>}}
\if{latex}{\out{\hypertarget{method-custom}{}}}
\subsection{Method \code{custom()}}{
Initialize a ``ProfilerRule`` object for a *custom* profiling rule.
             You can create a rule that
             analyzes system and framework metrics emitted during the training of a model and
             monitors conditions that are critical for the success of a
             training job.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProfilerRule$custom(
  name,
  image_uri,
  instance_type,
  volume_size_in_gb,
  source = NULL,
  rule_to_invoke = NULL,
  container_local_output_path = NULL,
  s3_output_path = NULL,
  rule_parameters = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{(str): The name of the profiler rule.}

\item{\code{image_uri}}{(str): The URI of the image to be used by the proflier rule.}

\item{\code{instance_type}}{(str): Type of EC2 instance to use, for example,
'ml.c4.xlarge'.}

\item{\code{volume_size_in_gb}}{(int): Size in GB of the EBS volume
to use for storing data.}

\item{\code{source}}{(str): A source file containing a rule to invoke. If provided,
you must also provide rule_to_invoke. This can either be an S3 uri or
a local path.}

\item{\code{rule_to_invoke}}{(str): The name of the rule to invoke within the source.
If provided, you must also provide the source.}

\item{\code{container_local_output_path}}{(str): The path in the container.}

\item{\code{s3_output_path}}{(str): The location in Amazon S3 to store the output.
The default Debugger output path for profiling data is created under the
default output path of the :class:`~sagemaker.estimator.Estimator` class.
For example,
s3://sagemaker-<region>-<12digit_account_id>/<training-job-name>/profiler-output/.}

\item{\code{rule_parameters}}{(dict): A dictionary of parameters for the rule.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
:class:`~sagemaker.debugger.ProfilerRule`:
             The instance of the custom ProfilerRule.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-to_profiler_rule_config_list"></a>}}
\if{latex}{\out{\hypertarget{method-to_profiler_rule_config_list}{}}}
\subsection{Method \code{to_profiler_rule_config_list()}}{
Generates a request dictionary using the parameters provided when initializing object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProfilerRule$to_profiler_rule_config_list()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
lict: An portion of an API request as a dictionary.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProfilerRule$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
