# Generated by roxygen2: do not edit by hand

S3method("!=",CollectionConfig)
S3method("==",CollectionConfig)
S3method(print,Enum)
export(.Job)
export(.append_project_tags)
export(.aws_partition)
export(.invoke)
export(.region_supports_debugger)
export(.region_supports_profiler)
export(.validate_smdataparallel_args)
export(AnalyticsMetricsBase)
export(AthenaDatasetDefinition)
export(AttributeError)
export(CollectionConfig)
export(DEFAULT_SLEEP_TIME_SECONDS)
export(DataloaderProfilingConfig)
export(DatasetDefinition)
export(DebuggerHookConfig)
export(DetailedProfilingConfig)
export(ECR_URI_PATTERN)
export(Enum)
export(Estimator)
export(EstimatorBase)
export(ExperimentAnalytics)
export(FeatureStoreOutput)
export(FileSystemInput)
export(Framework)
export(FrameworkModel)
export(FrameworkProcessor)
export(FrameworkProfile)
export(HTTPS_PREFIX)
export(HTTP_PREFIX)
export(HorovodProfilingConfig)
export(HyperparameterTuningJobAnalytics)
export(ImageUris)
export(IsSubR6Class)
export(Lambda)
export(MAX_BUCKET_PATHS_COUNT)
export(MetadataProperties)
export(MetricsConfigBase)
export(Model)
export(ModelBase)
export(ModelPackage)
export(NetworkConfig)
export(NotImplementedError)
export(PawsCredentials)
export(ProcessingInput)
export(ProcessingJob)
export(Processor)
export(ProfilerConfig)
export(ProfilerRule)
export(PythonProfiler)
export(PythonProfilingConfig)
export(Record)
export(RedshiftDatasetDefinition)
export(Rule)
export(RuleBase)
export(RunArgs)
export(RuntimeError)
export(S3Downloader)
export(S3Input)
export(S3Uploader)
export(S3_PREFIX)
export(SMDataParallelProfilingConfig)
export(SagemakerError)
export(ScriptProcessor)
export(Session)
export(ShuffleConfig)
export(StepRange)
export(TensorBoardOutputConfig)
export(TimeRange)
export(TrainingInput)
export(TrainingJobAnalytics)
export(Transformer)
export(TypeError)
export(UnexpectedStatusError)
export(UploadedCode)
export(ValueError)
export(base_from_name)
export(base_name_from_image)
export(build_dict)
export(cProfileTimer)
export(container_def)
export(create_tar_file)
export(deprecated_function)
export(download_file)
export(download_file_from_url)
export(download_folder)
export(format_class)
export(framework_name_from_image)
export(framework_version_from_tag)
export(get_config_value)
export(get_execution_role)
export(get_model_package_args)
export(get_mp_parameters)
export(get_short_version)
export(git_clone_repo)
export(is.s3_uri)
export(is_list_named)
export(islistempty)
export(log_stream)
export(model_code_key_prefix)
export(model_parameters)
export(name_from_base)
export(name_from_image)
export(pipeline_container_def)
export(pkg_method)
export(production_variant)
export(python_deprecation_warning)
export(regional_hostname)
export(remove_arg)
export(removed_kwargs)
export(removed_warning)
export(renamed_kwargs)
export(renamed_warning)
export(repack_model)
export(retries)
export(retry_api_call)
export(rsplit)
export(s3_path_join)
export(sagemaker_log_layout)
export(sagemaker_short_timestamp)
export(sagemaker_timestamp)
export(secondary_training_status_changed)
export(secondary_training_status_message)
export(split_s3_uri)
export(split_str)
export(sts_regional_endpoint)
export(tar_and_upload_dir)
export(unique_name_from_base)
export(validate_mp_config)
export(validate_smdistributed)
export(validate_source_dir)
export(validate_version_or_image_args)
export(vpc_configuration_env)
export(vpc_from_list)
export(vpc_sanitize)
export(vpc_to_list)
export(warn_if_parameter_server_with_multi_gpu)
export(write_bin)
import(R6)
import(R6sagemaker.debugger)
import(data.table)
import(fs)
import(jsonlite)
import(lgr)
import(paws)
import(tools)
import(uuid)
importFrom(fs,is_dir)
importFrom(fs,is_file)
importFrom(fs,path_join)
importFrom(jsonlite,read_json)
importFrom(jsonlite,toJSON)
importFrom(methods,as)
importFrom(methods,getPackageName)
importFrom(methods,is)
importFrom(processx,run)
importFrom(stats,runif)
importFrom(tools,toTitleCase)
importFrom(urltools,url_decode)
importFrom(urltools,url_parse)
importFrom(utils,URLencode)
importFrom(utils,getFromNamespace)
importFrom(utils,tar)
importFrom(utils,untar)
importFrom(uuid,UUIDgenerate)
importFrom(zip,zip)
